class UsersController < ApplicationController
  before_action :logged_in_user, only: [:index, :edit, :update, :destroy, :following, :followers]
  before_action :correct_user, only: [:edit, :update]
  before_action :admin_user, only: :destroy

  def index
    @users = User.paginate(page: params[:page]) # Note the page parameter comes from params[:page], which is generated by will_paginate (COFCOFmagicCOFCOF)
  end

  def show
    @user = User.find(params[:id])
    @microposts = @user.microposts.paginate(page: params[:page])
    # If you want to debug use debugger. Don't forget that it needs the byebug gem
  end

  def new
    @user = User.new
  end

  def create
    # @user = User.new(params[:user]) | Instead making the site super vunerable
    # like this, wich will make possible any user become admin. We use a better
    # version
    @user = User.new(user_params)
    if @user.save # Handle a successful save.
      @user.send_activation_email
      flash[:info] = "Welcome to Sample App ʕ•́ᴥ•̀ʔっ Please check your email to activate your account."
      redirect_to root_url
    else
      render 'new' # render the page new so the user can try again
    end
  end

  def edit
  end

  def update
    if @user.update(user_params) # Handle a successful update. Only if...   
      flash[:success] = "Profile Updated"
      redirect_to @user
    else
      render 'edit'
    end
  end

  def destroy
    User.find(params[:id]).destroy
    flash[:success] = "User deleted (⚆ _ ⚆)"
    redirect_to users_url
  end

  def following
    @title = "Following"
    @user = User.find(params[:id])
    @users = @user.following.paginate(page: params[:page])
    render 'show_follow'
  end

  def followers
    @title = "Followers"
    @user = User.find(params[:id])
    @users = @user.followers.paginate(page: params[:page])
    render 'show_follow'
  end

  private

  def user_params
    params.require(:user).permit(:name, :email, :password, :password_confirmation)
  end

  # Before filters
  # Confirms the correct user.
  def correct_user
    @user = User.find(params[:id])
    redirect_to(root_url) unless current_user?(@user)
  end

  # Confirms an admin user.
  def admin_user
    redirect_to(root_url) unless current_user.admin?
  end

  def user_params
    params.require(:user).permit(:name, :email, :password,
                                 :password_confirmation)
    # Note the extra level of indentation on the
    # user_params method is designed to make it visually
    # apparent which methods are defined after private.
  end

  # Cofirms a logged-in user.
  def logged_in_user
    unless logged_in?
      store_location
      flash[:danger] = "Please log in!"
      redirect_to login_url
    end
  end
end
